// Foundation by ZURB
// foundation.zurb.com
// Licensed under MIT Open Source

// IMPORT ONCE
// We use this to prevent styles from being loaded multiple times for compenents that rely on other components. 
$modules: () !default;
@mixin exports($name) {
  @if (index($modules, $name) == false) {
    $modules: append($modules, $name);
    @content;
  }
}

// RANGES
// We use these functions to define ranges for various things, like media queries. 
@function lower-bound($range){
  @if length($range) <= 0 {
    @return 0;
  }
  @return nth($range,1);
}

@function upper-bound($range) {
  @if length($range) < 2 {
    @return 999999999999;
  }
  @return nth($range, 2);
}

// Borrowed from RenÃ© Meye's [pull request #61](https://github.com/zurb/ink/pull/61). 
@function number2word($n) {
  @if $n == 1 {
   @return one;
  } @else if $n == 2 {
    @return two;
  } @else if $n == 3 {
    @return three;
  } @else if $n == 4 {
    @return four;
  } @else if $n == 5 {
    @return five;
  } @else if $n == 6 {
    @return six;
  } @else if $n == 7 {
    @return seven;
  } @else if $n == 8 {
    @return eight;
  } @else if $n == 9 {
    @return nine;
  } @else if $n == 10 {
    @return ten;
  } @else if $n == 11 {
    @return eleven;
  } @else if $n == 12 {
    @return twelve;
  } @else if $n == 13 {
    @return thirteen;
  } @else if $n == 14 {
    @return fourteen;
  } @else if $n == 15 {
    @return fivetine;
  } @else if $n == 16 {
    @return sixteen;
  } @else if $n == 17 {
    @return seventeen;
  } @else if $n == 18 {
    @return eighteen;
  } @else if $n == 19 {
    @return nineteen;
  } @else if $n == 20 {
    @return twenty;
  } @else {
    @return many;
  }
}

//
// Grid Functions
//


// @FUNCTION
// $colNumber - Found in settings file
// $totalColumns - Found in settings file
@function grid-calc-pct($colNumber, $totalColumns) {
  @return percentage(($colNumber / $totalColumns));
}

@function grid-calc-px($colNumber, $totalColumns, $conWidth, $colGutter) {
  @return (($conWidth - ($totalColumns - 1) * $colGutter) / $totalColumns * $colNumber + ($colNumber - 1) * $colGutter);
}